<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="comma.sist.guide.dao.guide-mapper">
	<!-- 가이드 목록리스트 -->
	<select id="guideAllData" resultMap="comma.sist.common.text-mapper.TextList" parameterType="java.util.Map">
		select guide_no,user_id,guide_subject,text_cost,user_name,text_move,guide_img,text_loc,text_time,num
		from (select guide_no,user_id,guide_subject,text_cost,user_name,text_move,guide_img,text_loc,text_time,rownum as num 
		from (select guide.guide_no,guide.user_id,guide_subject,text_cost,user_name,text_move,guide_img,text_loc,text_time from text,guide,users 
		where guide.user_id=users.user_id and guide.text_no=text.text_no order by guide.guide_no desc))
		where num between #{start} and #{end}
	</select>
	
	<!-- 가이드 페이지 -->
	<select id="guideTotalPage" resultType="int">
		select ceil(count(guide_no)/9) from guide 
	</select>
	
	<select id="guideInfo" resultMap="comma.sist.common.text-mapper.TextList" parameterType="int">
		select guide_no,guide.user_id,guide_detail,guide_img,user_name,user_introduce,guide_subject,text_total_person,text_move,guide_loc_intro,
				text.text_no,text_loc,text_cost,guide_cost_detail,text_tour_date,guide_meet,text_time1,text_time2,text_time3,text_time4,text_time
		from guide,text,users 
		where guide.guide_no=#{guide_no} and guide.text_no=text.text_no and guide.user_id=users.user_id
	</select>
	
	<!-- 가이드 글 추가 -->
	<insert id="textInsert" parameterType="Text">
		insert into text values((select NVL(max(text_no)+1,1) from text),#{text_loc},#{text_cost},#{text_total_person},sysdate,
					#{text_time1},#{text_time2},#{text_time3},#{text_time4},#{text_time},#{text_move},0,'n',#{text_tour_date})
	</insert>
	
	<insert id="guideInsert" parameterMap="comma.sist.common.text-mapper.TextList_param">
		<selectKey keyProperty="text_no" resultType="int" order="BEFORE">
			select max(text_no) as text_no from text
		</selectKey>
		insert into guide(guide_no,user_id,guide_subject,text_no,guide_loc_intro,guide_detail,guide_meet,guide_map,guide_cost_detail,guide_img)
		 values((select NVL(max(guide_no)+1,1) from guide),
				#{guidevo.user_id},#{guidevo.guide_subject},#{text_no},#{guidevo.guide_loc_intro},#{guidevo.guide_detail},
				#{guidevo.guide_meet},#{guidevo.guide_map},#{guidevo.guide_cost_detail},#{guidevo.guide_img})
	</insert>
	
	<!-- 가이드 글 조회수 증가 및 조회-->
	<update id="guideHitIncrease" parameterType="int">
		update text set text_hit=text_hit+1 where text_no=#{text_no}
	</update>
	<select id="guideHitInfo" parameterType="int" resultType="int">
		select text_hit from text where text_no=#{text_no}
	</select>
	
	<!-- 가이들 글 삭제 -->
	<select id="textnoSearch" parameterType="int" resultType="int">
		select text_no from guide where guide_no=#{guide_no}
	</select>
	<delete id="reviewGuideDelete" parameterType="int">
		delete from review where guide_no=#{guide_no}
	</delete>
	<delete id="reservationGuideDelete" parameterType="int">
		delete from reservation where guide_no=#{guide_no}
	</delete>
	<delete id="wishGuideDelete" parameterType="int">
		delete from wish where guide_no=#{guide_no}
	</delete>
	<delete id="guideDelete" parameterType="int">
		delete from guide where guide_no=#{guide_no}
	</delete>
	<delete id="textDelete" parameterType="int">
		delete from text where text_no=#{text_no}
	</delete>
	
	<!-- 가이드 사진 존재하는지 확인 -->
	<select id="guideImgisExist" parameterType="String" resultType="int">
		select count(guide_img) from guide where guide_img=#{guide_img}
	</select>
	
	
 	<select id="myGuideWriter" parameterType="String" resultMap="comma.sist.common.text-mapper.TextList"> 
	  select rownum guide_no,guide_subject,text_regdate,user_nick,reservation_person, text_end
      from guide,text,users,reservation where text.text_no=guide.text_no and guide.guide_no=reservation.guide_no    
	</select> 
	
	<select id="bestGuide" resultMap="comma.sist.common.text-mapper.TextList">
      <![CDATA[ 
            select score review_score,user_nick,id text_loc,rownum review_no from
            (select avg(review_score) score,user_nick,users.user_id id
            from review,users,guide
            where review.guide_no=guide.guide_no and
               guide.user_id=users.user_id
            group by user_nick, users.user_id
            order by avg(review_score)desc)
            where rownum<4
   
         ]]>   
   </select>


</mapper>
